node ('maven') {
    stage ('cloning source code'){
    //pulling source code from git
    git 'https://github.com/sumankumarpagadala/openmrs-core.git'
    }
    stage ('building package'){
        //packaging
        sh 'mvn clean package'
    }
    stage ('archiving artifacts'){
        //archiving artifacts
        archiveArtifacts 'webapp/target/*.war'
    }
	stage('making a build directory'){
		sh 'mkdir -p $JOB_NAME/$BUILD_NUMBER'
	}
	stage ('coying war file to build directory') {
		sh 'cp /home/jenkins/workspace/OPENMRS-BUILD-PACKAGE-PIPELINE-VCS/webapp/target/openmrs.war /home/jenkins/workspace/OPENMRS-BUILD-PACKAGE-PIPELINE-VCS/$JOB_NAME/$BUILD_NUMBER/openmrs.war'
	}
    stage ('logs'){
        //logs
        junit allowEmptyResults: true, testResults: 'webapp/target/surefire-reports/*.xml'
    } 
	stage('SonarQube analysis') {
    // performing sonarqube analysis with "withSonarQubeENV(<Name of Server configured in Jenkins>)"
    withSonarQubeEnv('sonarqube.lab.com') {
      // requires SonarQube Scanner for Maven 3.2+
      sh 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar'
    }
}
node ('chefnode') {
	stage('deploying application')
		sh 'chef-client'
}
node ('maven') {
	stage ('copying openmrs.war to application server')
		sh 'scp /home/jenkins/workspace/OPENMRS-BUILD-PACKAGE-PIPELINE-VCS/$JOB_NAME/$BUILD_NUMBER/openmrs.war root@192.168.1.16:/opt/tomcat/latest/webapps/openmrs.war'
}